// This file provides a client with methods as well as functions to interact with the HTTP API.
//
// Code generated by github.com/MarkRosemaker DO NOT EDIT.

package toggl

import (
	"context"
	"net/http"
	"net/url"

	"github.com/go-api-libs/api"
	"github.com/go-json-experiment/json"
)

var (
	baseURL = &url.URL{
		Host:   "api.track.toggl.com",
		Path:   "/api/v9",
		Scheme: "https",
	}

	jsonOpts = json.JoinOptions(
		json.RejectUnknownMembers(true))
)

// Client conforms to the OpenAPI3 specification for this service.
type Client struct {
	// The HTTP client to use for requests.
	cli *http.Client
}

// NewClient creates a new Client.
func NewClient() (*Client, error) {
	return &Client{cli: http.DefaultClient}, nil
}

// Returns details for the current user.
//
//	GET /me
func (c *Client) GetMe(ctx context.Context) error {
	u := baseURL.JoinPath("/me")
	req := (&http.Request{
		Header:     http.Header{},
		Host:       u.Host,
		Method:     http.MethodGet,
		Proto:      "HTTP/1.1",
		ProtoMajor: 1,
		ProtoMinor: 1,
		URL:        u,
	}).WithContext(ctx)

	rsp, err := c.cli.Do(req)
	if err != nil {
		return err
	}
	defer rsp.Body.Close()

	switch rsp.StatusCode {
	case http.StatusUnauthorized:
		// User is unauthorized to use the API
		return api.NewErrStatusCode(rsp)
	default:
		return api.NewErrUnknownStatusCode(rsp)
	}
}
